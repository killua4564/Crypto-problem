from Crypto.Util.number import *
from Crypto.Random.random import randrange
from gmpy2 import next_prime

from secret import FLAG


def genkey():
    while True:
        p = 2
        while size(p) < 512:
            p *= getPrime(randrange(2, 12))
        if isPrime(p + 1):
            return p + 1

def sprkey(p):
    p1 = p
    for _ in range(100):
        p1 = int(next_prime(p1))
    p2 = int(next_prime(2 * p - p1))
    return p1, p2

if __name__ == '__main__':
    e = 0x10001
    p, (q1, q2) = genkey(), sprkey(genkey())
    flag_enc = bytes_to_long(FLAG.encode())
    flag_enc = pow(flag_enc, e, p * q1 * q2)
    print(f'n = {p * q1 * q2}')
    print(f'flag = {flag_enc}')

# n = 89440560733164708153845415331446945959245098008966030018929526224499627757561588031620648168516773823431871418356339994635745869093527493722219078655396271734959826773338477957209319942403927521493751796095337134761865520104013849636230344195374484615442639465418351367038754528133862123415585916462336887316272609032894837016897778296130831547243876103719134564487881368375292269727492130954469891687595162077285957074426084146076230091131943856427238665819605762639
# flag = 70677748948501844132153830929251677244113768980787500369152141990965232213831862207217721522056164204162823419806165910568220932219900368675591552968178184614121712327013011109514719999717122365733828157304155345657621328222420087192300965297138284125891425367991980443832811085424797902616979150681335481651723930150196824667059658752617939365799090553917136979687242700603979742173293315404232654368071971864852868586639814633504013277004899488199641716300195627399
